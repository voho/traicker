/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface _CfMETADATA {
  key: Generated<number | null>;
  value: Buffer | null;
}

export interface Category {
  category_id: string;
  color: string | null;
  created_at: string;
  deleted_at: string | null;
  description: string | null;
  emoji: string | null;
  parent_category_id: string | null;
  title: string;
  updated_at: string;
  user_id: string;
}

export interface D1Migrations {
  applied_at: Generated<string>;
  id: Generated<number | null>;
  name: string | null;
}

export interface Event {
  ai_confidence: number;
  ai_explain: string;
  ai_model: string;
  amount: number;
  created_at: string;
  currency: string;
  deleted_at: string | null;
  description: string;
  effective_at: string;
  event_id: string;
  raw_event_id: string | null;
  type: string;
  updated_at: string;
  user_id: string;
}

export interface EventCategory {
  category_id: string;
  created_at: string;
  deleted_at: string | null;
  event_id: string;
  updated_at: string;
}

export interface EventRaw {
  created_at: string;
  error: string | null;
  prompt: string;
  raw_event_id: string;
  status: string;
  user_id: string;
}

export interface User {
  user_id: string;
}

export interface DB {
  _cf_METADATA: _CfMETADATA;
  category: Category;
  d1_migrations: D1Migrations;
  event: Event;
  event_category: EventCategory;
  event_raw: EventRaw;
  user: User;
}
